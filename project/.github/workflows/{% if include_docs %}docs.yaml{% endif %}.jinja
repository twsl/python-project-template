---
name: Documentation

on:
  push:
  pull_request:
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  ARTIFACT: docs

{% if repository_provider == 'github.com' %}{% set action_version = 4 %}{% else %}{% set action_version = 3 %}{% endif%}
{% if 'road-runner' in github_runner %}{% set github_runner = github_runner + [github_runner_onprem] %}{% endif %}
jobs:
  build-docs:
    name: Build docs
    runs-on: {{ github_runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "{{ python_version }}"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Set up cache
        uses: actions/cache@v4
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-Linux-{{ python_version }}-{% raw %}${{ hashFiles('poetry.lock') }}{% endraw %}{% if docs_library == "sphinx" %}

      - name: Sphinx
        run: sudo apt install -y python3-sphinx{% endif %}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Build dependencies
        run: poetry build

      - name: Build MkDocs docs
        run: poetry run mkdocs build -f ./docs/mkdocs.yml -d ./_build/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v{{ action_version }} # cant update yet on GHES
        {% raw %}with:
          name: ${{ env.ARTIFACT }}
          path: ./_build/
        if: ${{ always() }}{% endraw %}

  deploy-docs:
    name: Deploy docs
    needs: build-docs
    permissions:
      pages: write
      id-token: write
    runs-on: {{ github_runner }}
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: {% raw %}${{ steps.deployment.outputs.page_url }}{% endraw %}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Download Artifacts
        uses: actions/download-artifact@v{{ action_version }}{% if repository_provider != 'github.com' %}  # cant update yet on GHES{% endif %}
        with:
          path: artifacts

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v{{ action_version -1 }}{% if repository_provider != 'github.com' %}  # cant update yet on GHES{% endif %}
        with:
          path: {% raw %}artifacts/${{ env.ARTIFACT }}/{% endraw %}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v{{ action_version }}{% if repository_provider != 'github.com' %}  # cant update yet on GHES{% endif %}
